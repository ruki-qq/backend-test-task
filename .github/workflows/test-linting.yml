name: Code linting

on:
  pull_request:
    branches: ["**"]

jobs:
  ruff-format:
    runs-on: ubuntu-latest
    steps:
      - name: Check Out Repository
        uses: actions/checkout@v4

      - name: Run Ruff format
        uses: astral-sh/ruff-action@v3
        with:
          args: "format --check"

  ruff-linter:
    runs-on: ubuntu-latest
    steps:
      - name: Check Out Repository
        uses: actions/checkout@v4

      - name: Run Ruff linter
        uses: astral-sh/ruff-action@v3
        with:
          args: "check"

  mypy:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
      contents: read
    steps:
      - name: Check Out Repository
        uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          enable-cache: true
          cache-dependency-glob: "uv.lock"

      - name: Set up Python
        run: uv python install

      - name: Install the project
        run: uv sync --all-extras --dev

      - name: Check
        run: uv run mypy . --config-file pyproject.toml

  test:
    runs-on: ubuntu-latest
    env:
      MONGO__URL: mongodb://localhost:27017/
      MONGO__DB_NAME: mongo_test
    services:
      mongodb:
        image: mongo:latest
        ports:
          - 27017:27017
        env:
          MONGO_INITDB_DATABASE: mongo_test
        options: >-
          --health-cmd "mongosh --eval 'db.runCommand(\"ping\").ok'"
          --health-interval 5s
          --health-timeout 2s
          --health-retries 10
    steps:
      - name: Check Out Repository
        uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          enable-cache: true
          cache-dependency-glob: "uv.lock"

      - name: Set up Python
        run: uv python install

      - name: Install the project
        run: uv sync --all-extras --dev

      - name: Test
        run: uv run pytest